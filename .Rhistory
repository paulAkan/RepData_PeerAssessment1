apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
myImage(a1)
myImage(a2)
a2 <- svd1$u[,1:2] %*%  diag(svd1$d[1:2])  %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*%  diag(svd1$d[1:5])  %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*%  diag(svd1$d[1:10])  %*% t(svd1$v[,1:10]))
getwd()
StudentData<-read.csv("StudentData3.cvs",)
StudentData<-read.csv("StudentData3.cvs")
StudentData<-read.csv("StudentData3.csv")
head(StudentData)
str(StudentData)
student_x<-StudentData[,4, drop=FALSE]
head(student_x)
student_x<-StudentData[,5, drop=FALSE]
head(student_x)
student_y<-StudentData[1:4,, drop=FALSE]
head(student_y)
str(student_x)
kmeans(StudentData, centers = 2)
kmeans(StudentData, centers = 3)
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
kmObj$iter
studData<-StudentData[1:4,, drop=FALSE]
kmeans(StudData, centers = 3)
kmeans(studData, centers = 3)
head(studData)
head(StudentData)
studData<-StudentData[1:4,, drop=FALSE]
head(studData)
studData
studData<-StudentData[1,, drop=FALSE]
studData<-StudentData[,1:4, drop=FALSE]
head(studData)
kmeans(studData, centers = 3)
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
kmeans(studData, centers = 2)
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
kmeans(studData, centers = 2)
rm(list = ls())
library(swirl)
swirl()
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
rm(list = ls())
studentData<-read.csv("StudentData3.csv")
studData<-studentData[,1:4, drop=FALSE]
head(studData)
kmob<-kmeans(StudentData, centers = 3)
kmob<-kmeans(studData, centers = 3)
kmob
plot(x,y,col=kmob$cluster,pch=19,cex=2)
kmob$iter
kmob$centers
kmob$cluster
points(kmob$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
points(kmob$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
points(kmob$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
points(kmob$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
points(kmob$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
points(kmob$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
library(cluster)
library(fpc)
plotcluster(studData, studData$cluster)
library(cluster)
library(fpc)
install.packages("fpc")
library(fpc)
plotcluster(studData, studData$cluster)
plotcluster(studData, kmob$cluster)
kmob<-kmeans(studData, centers = 3)
kmob
clusplot(dat, kmob$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
clusplot(studData, kmob$cluster, color=TRUE, shade=TRUE, labels=2, lines=0)
plot(studData,col=kmob$cluster)
points(kmob$center,col=1:2,pch=8,cex=1)
plot(studData,col=kmob$cluster,pch=19,cex=2)
plot(studData,col=kmob$cluster,pch=19,cex=2)
points(kmob$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
with(studData, pairs(studData, col=c(1:3)[kmob$cluster]))
library(ggplot)
library(ggplot2)
kmob$cluster <- as.factor(kmob$cluster)
ggplot(studData, aes(RQ, GPA, color = kmob$cluster)) + geom_point()
ggplot(studData, aes(RQ, Q, color = kmob$cluster)) + geom_point()
fitted(kmob, method = c("centers", "classes"))
plot(studData, col = kmob$cluster)
points(kmob$centers, col = 1:2, pch = 8, cex = 2)
head
head(studentData)
stud1<-studentData[,1:2, drop=F]
head(stud1)
cl<-kmeans(StudentData, centers = 3)
cl<-kmeans(stud1, centers = 3)
plot(cl,col=kmob$cluster,pch=19,cex=2)
plot(cl,col=cl$cluster,pch=19,cex=2)
plot(stud1,col=cl$cluster,pch=19,cex=2)
points(kmob$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
stud1<-studentData[,3:4, drop=F]
plot(stud1,col=cl$cluster,pch=19,cex=2)
cl<-kmeans(stud1, centers = 3)
plot(stud1,col=cl$cluster,pch=19,cex=2)
points(cl$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
cl<-kmeans(stud1, centers = 2)
plot(stud1,col=cl$cluster,pch=19,cex=2)
points(cl$centers,col=c("black","red"),pch=3,cex=3,lwd=3)
getwd()
stud<-read.csv("StudentData3.csv")
head(stud)
cl<-stud[,1:4, drop=F]
head(cl)
km<-kmeans(cl, centers=2)
km
plot(cl,col=km$cluster,pch=19,cex=2)
points(km$centers,col=c("black","red"),pch=3,cex=3,lwd=3)
cl<-stud[,3:4, drop=F]
km<-kmeans(cl, centers=2)
plot(cl,col=km$cluster,pch=19,cex=2)
points(km$centers,col=c("black","red"),pch=3,cex=3,lwd=3)
cl<-stud[,2:3, drop=F]
km<-kmeans(cl, centers=2)
plot(cl,col=km$cluster,pch=19,cex=2)
points(km$centers,col=c("black","red"),pch=3,cex=3,lwd=3)
library(swirl)
swirl()
swirl()
install_from_swirl("Exploratory Data Analysis")
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
swirl()
swirl()
swirl()
swirl()
swirl()
dim(ssd)
names(ssd[562:563])
table
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
sub1
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
getwd()
library(plyr)
library(ggplot2)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
aggregate.data <- with(NEI, aggregate(Emissions, by = list(year), sum))
polygon(aggregate.data, col = "red", border = "blue")
source('C:/Users/Paul Akangah/rprog2/plot1.R')
source('C:/Users/Paul Akangah/rprog2/plot1.R')
source('C:/Users/Paul Akangah/rprog2/plot2.R')
source('C:/Users/Paul Akangah/rprog2/plot2.R')
source('C:/Users/Paul Akangah/rprog2/plot2.R')
source('C:/Users/Paul Akangah/rprog2/plot2.R')
source('C:/Users/Paul Akangah/rprog2/plot2.R')
source('C:/Users/Paul Akangah/rprog2/plot2.R')
rm(list=ls(\))
rm(list=ls())
source('C:/Users/Paul Akangah/rprog2/plot2.R')
rm(list=ls())
source('C:/Users/Paul Akangah/rprog2/plot3.R')
source('C:/Users/Paul Akangah/rprog2/plot3.R')
source('C:/Users/Paul Akangah/rprog2/plot3.R')
source('C:/Users/Paul Akangah/rprog2/plot3.R')
sub_emissions<- subset(NEI,fips="24510")
g<-ggplot(sub_emissions,aes(year,Emissions,color=type))
g+geom_line(stat = "summary",fun.y="sum")+ labs(y="Emissions for Baltimore City ",x="Year (1999 - 2008)")
source('C:/Users/Paul Akangah/rprog2/plot3.R')
rm(list=ls())
source('C:/Users/Paul Akangah/rprog2/plot3.R')
qplot(year, Emissions, data = NEI.24510.type, group = Pollutant_Type, color = Pollutant_Type,
geom = c("point", "line"), ylab = expression("Total Emissions, PM"[2.5]),
xlab = "Year", main = "Total Emissions in U.S. by Type of Pollutant")
rm(list=ls())
source('C:/Users/Paul Akangah/rprog2/plot4.R')
source('C:/Users/Paul Akangah/rprog2/plot4.R')
source('C:/Users/Paul Akangah/rprog2/plot5.R')
rm(list=ls())
source('C:/Users/Paul Akangah/rprog2/plot6.R')
rm(list=ls())
source('C:/Users/Paul Akangah/rprog2/plot6.R')
qplot(Year, Emissions, data = aggregated.motor.zips, group = Group, color = Group,
geom = c("point", "line"), ylab = expression("Total Emissions, PM"[2.5]),
xlab = "Year", main = "Comparison of Total Emissions by County")
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y,]
getwd()
setwd("C:/Users/Paul Akangah/RepData")
getwd()
dir()
activityData <- read.csv('activity.csv')
###############################
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
activityData <- read.csv('activity.csv')
head(activityData)
str(activityData)
activityData <- read.csv('activity.csv', stringsAsFactors=FALSE)
str(activityData)
rawDate <- as.POSIXct(rawDate, format="%Y-%m-%d")
activityData$date <- as.POSIXct(activityData$date, format="%Y-%m-%d")
head(activityData)
activity <- data.frame(date=activityData$date,
weekday=tolower(weekdays(activityData$date)),
steps=activityData$steps,
interval=activityData$interval)
#check if it is weekend or weekday
activityData <- cbind(activityData,
daytype=ifelse(activityData$weekday == "saturday" |
activityData$weekday == "sunday", "weekend", "weekday"))
activity <- data.frame(date=activityData$date,
weekday=tolower(weekdays(activityData$date)),
steps=activityData$steps,
interval=activityData$interval)
activityData <- cbind(activityData,
daytype=ifelse(activityData$weekday == "saturday" |
activityData$weekday == "sunday", "weekend", "weekday"))
activityData$date <- as.POSIXct(activityData$date, format="%Y-%m-%d")
str(activityData)
activityNew <- data.frame(date=activityData$date,
weekday=activityData$weekday,
daytype=activityData$daytype,
interval=activityData$interval,
steps=activity_raw$steps)
activityNew <- data.frame(date=activityData$date,
weekday=activityData$weekday,
daytype=activityData$daytype,
interval=activityData$interval,
steps=activityData$steps)
activityData <- data.frame(date=activityData$date,
weekday=tolower(weekdays(activityData$date)),
steps=activityData$steps,
interval=activityData$interval)
rm(activityData)
rm(activity)
source('C:/Users/Paul Akangah/RepData/repData.R')
head(activityNew)
totalData <- aggregate(activityNew$steps, by=list(activityNew$date), FUN=sum, na.rm=TRUE)
head(totalData)
names(totalData) <- c("date", "total")
head(totalData)
source('C:/Users/Paul Akangah/RepData/repData.R')
source('C:/Users/Paul Akangah/RepData/repData.R')
source('C:/Users/Paul Akangah/RepData/repData.R')
source('C:/Users/Paul Akangah/RepData/repData.R')
source('C:/Users/Paul Akangah/RepData/repData.R')
head(meanSteps)
str(meanSteps)
source('C:/Users/Paul Akangah/RepData/repData.R')
source('C:/Users/Paul Akangah/RepData/repData.R')
source('C:/Users/Paul Akangah/RepData/repData.R')
source('C:/Users/Paul Akangah/RepData/repData.R')
source('C:/Users/Paul Akangah/RepData/repData.R')
source('C:/Users/Paul Akangah/RepData/repData.R')
source('C:/Users/Paul Akangah/RepData/repData.R')
source('C:/Users/Paul Akangah/RepData/repData.R')
xyplot(mean ~ interval | daytype, meanData3,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
#load the data
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
activityData <- read.csv('activity.csv', stringsAsFactors=FALSE)
#change date to actual date format
activityData$date <- as.POSIXct(activityData$date, format="%Y-%m-%d")
#isolate the weekdays
activityData <- data.frame(date=activityData$date,
weekday=tolower(weekdays(activityData$date)),
steps=activityData$steps,
interval=activityData$interval)
#check if it is weekend or weekday
activityData <- cbind(activityData,
daytype=ifelse(activityData$weekday == "saturday" |
activityData$weekday == "sunday", "weekend", "weekday"))
#create the data format
activityNew <- data.frame(date=activityData$date,
weekday=activityData$weekday,
daytype=activityData$daytype,
interval=activityData$interval,
steps=activityData$steps)
head(activityNew)
str(activityNew)
totalData <- aggregate(activityNew$steps, by=list(activityNew$date), FUN=sum, na.rm=TRUE)
#rename heading
names(totalData) <- c("date", "total")
#plot histogram
hist(totalData$total,
breaks=seq(from=0, to=25000, by=2500),
col="green",
xlab="Total number of steps",
ylim=c(0, 20),
main="Total number of steps taken each day")
meanData<-mean(totalData$total)
medianData<-median(totalData$total)
#calculate the means of steps for all days for each interval
meanSteps <- aggregate(activityNew$steps, by=list(activityNew$interval),
FUN=mean, na.rm=TRUE)
#rename heading
names(meanSteps) <- c("interval", "mean")
str(meanSteps)
#plot the time series
plot(meanSteps$interval,
meanSteps$mean,
type="l",
col="black",
lwd=2,
xlab="Interval (minutes)",
ylab="Average number of steps",
main="Time-series plot of the average number of steps per intervals")
#locate maximum mean
max_pos_mean <- which(meanSteps$mean == max(meanSteps$mean))
#find the value
max_interval <- meanSteps[max_pos_mean, 1]
#count number of NAs
NA.count <- sum(is.na(activityNew$steps))
#locate NA positions
NA.pos <- which(is.na(activityNew$steps))
#create a vector
meanVector <- rep(mean(activityNew$steps, na.rm=TRUE), times=length(NA.pos))
#replace NAs with the mean
activityNew[NA.pos, "steps"] <- meanVector
totalData2 <- aggregate(activityNew$steps, by=list(activityNew$date), FUN=sum)
#rename heading
names(totalData2) <- c("date", "total")
#calculate the histogram of the total number of steps each day
hist(totalData2$total,
breaks=seq(from=0, to=25000, by=2500),
col="red",
xlab="Total number of steps",
ylim=c(0, 30),
main="Histogram of the total number of steps taken each day")
```
####the code for calculating the mean and median
```{r}
meanData2<-mean(totalData2$total)
medianData2<-median(totalData2$total)
```
####The mean and median are 10766.19 and 10766.18, respectively
####these numbers differ from the previous estimate.
##
source('C:/Users/Paul Akangah/RepData/repData.R')
plot(meanSteps$interval,
meanSteps$mean,
type="l",
col="black",
lwd=2,
xlab="Interval (minutes)",
ylab="Average number of steps",
main="Time-series plot of the average number of steps per intervals")
hist(totalData2$total,
breaks=seq(from=0, to=25000, by=2500),
col="red",
xlab="Total number of steps",
ylim=c(0, 30),
main="Histogram of the total number of steps taken each day")
xyplot(mean ~ interval | daytype, meanData3,
type="l",
lwd=1,
xlab="Interval",
ylab="Number of steps",
layout=c(1,2))
knit("PA1_template.Rmd", output = NULL)
library(knitr)
knit("PA1_template.Rmd", output = NULL)
knit("PA11_template.Rmd", output = NULL)
